@use "sass:map";
@use "../variables" as vars;
@use "../mixins" as mix;
@use "./_global";

// 添加加载动画
@keyframes xh-button-loading {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.xh-button {
  @extend .xh-component;
  @include mix.use-flex(row, center, center);
  @include mix.use-transition(all);

  position: relative;
  white-space: nowrap;
  outline: none;
  border: 1px solid var(--xh-border-color);
  font-weight: map.get(vars.$font-weights, "medium");
  user-select: none;
  -webkit-appearance: none;

  // 基础样式 - 移除固定高度
  color: var(--xh-button-text-color);
  background-color: var(--xh-button-bg-color);
  border-radius: map.get(vars.$border-radius, "base");

  // 默认尺寸
  padding: map.get(vars.$spacings, "sm") map.get(vars.$spacings, "lg");
  font-size: map.get(vars.$font-sizes, "base");
  min-height: 32px;

  // 尺寸变体
  &--small {
    padding: map.get(vars.$spacings, "xs") map.get(vars.$spacings, "base");
    font-size: map.get(vars.$font-sizes, "sm");
    min-height: 24px;
  }

  &--large {
    padding: map.get(vars.$spacings, "base") map.get(vars.$spacings, "xl");
    font-size: map.get(vars.$font-sizes, "lg");
    min-height: 40px;
  }

  // 状态
  &:hover:not(.is-disabled):not(.is-loading) {
    color: var(--xh-primary-color);
    border-color: var(--xh-primary-color-light-3);
    background-color: var(--xh-primary-color-light-9);
  }

  &:active:not(.is-disabled):not(.is-loading) {
    filter: brightness(0.9);
  }

  // 类型
  @each $type in ("primary", "success", "warning", "danger") {
    &--#{$type} {
      @include mix.use-color("white");
      @include mix.use-bg-color($type);
      border-color: var(--xh-#{$type}-color);

      &.is-plain {
        color: var(--xh-#{$type}-color);
        background-color: var(--xh-white);
        border-color: var(--xh-#{$type}-color);

        &:hover {
          background-color: var(--xh-#{$type}-color);
          color: var(--xh-white);
        }
      }
    }
  }

  // 加载状态
  &.is-loading {
    cursor: wait !important;
    pointer-events: auto !important;

    .xh-button__loading-icon {
      margin-right: map.get(vars.$spacings, "xs");
      display: inline-flex;
      align-items: center;

      .xh-loading-icon {
        animation: xh-button-loading 1s infinite linear;
        width: 1em;
        height: 1em;
      }
    }

    .xh-button__content {
      opacity: 0.7;
    }

    &:hover,
    &:focus,
    &:active {
      cursor: wait !important;
      filter: none;
    }
  }

  // 图标
  &__icon {
    @extend .xh-icon;
    margin-right: map.get(vars.$spacings, "xs");

    .icon-placement--right & {
      margin-right: 0;
      margin-left: map.get(vars.$spacings, "xs");
      order: 1;
    }
  }

  // 块级按钮
  &.is-block {
    display: flex;
    width: 100%;
  }

  // 圆角和圆形
  &.is-round {
    border-radius: var(--xh-border-radius-round);
  }

  &.is-circle {
    border-radius: 50%;
    padding: map.get(vars.$spacings, "sm");
  }

  // 禁用状态
  &.is-disabled {
    cursor: not-allowed !important;
    pointer-events: auto !important;
    opacity: 0.5;

    &:hover,
    &:focus,
    &:active {
      cursor: not-allowed !important;
      filter: none;
    }
  }

  // 悬浮效果
  &:not(.is-disabled):not(.is-loading) {
    cursor: pointer;
    &:hover {
      filter: brightness(0.9);
    }

    &:active {
      filter: brightness(0.8);
    }
  }

  // 圆形按钮特殊处理
  &.is-circle &__icon {
    margin: 0;
  }
}
