@use "sass:map";
@use "./variables" as *;

// 响应式设计
@mixin use-respond-to($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);
  @if $value {
    @media (min-width: $value) {
      @content;
    }
  }
}

// 主题切换
@mixin use-theme($theme: "light") {
  $theme-map: map.get($theme-colors, $theme);
  @each $key, $value in $theme-map {
    --xh-#{$key}: #{$value};
  }
}

// 颜色混入
@mixin use-color($type, $alpha: 1) {
  color: rgba(map.get($colors, $type), $alpha);
}

// 背景色混入
@mixin use-bg-color($type, $alpha: 1) {
  background-color: rgba(map.get($colors, $type), $alpha);
}

// 边框混入
@mixin use-border($width: 1px, $style: solid, $color: var(--xh-border-color)) {
  border: $width $style $color;
}

// 过渡混入
@mixin use-transition($properties...) {
  transition-property: $properties;
  transition-duration: $transition-duration;
  transition-timing-function: $transition-timing;
}

// flex布局
@mixin use-flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// 文本省略
@mixin use-text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;
    overflow: hidden;
  }
}

// 清除浮动
@mixin use-clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 绝对定位居中
@mixin use-absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 滚动条样式
@mixin use-scrollbar($width: 6px, $thumb-color: #c1c1c1, $track-color: #f1f1f1) {
  &::-webkit-scrollbar {
    width: $width;
  }
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
  }
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
}
